{"version":3,"file":"scroll-timeline.js","sources":["../src/utils.js","../src/scroll-timeline-base.js","../src/proxy-animation.js","../src/intersection-based-offset.js","../src/index.js"],"sourcesContent":["export function parseLength(obj, acceptStr) {\n  if (obj instanceof CSSUnitValue || obj instanceof CSSMathSum)\n    return obj;\n  if (!acceptStr)\n    return null;\n  let matches = obj.trim().match(/^(-?[0-9]*\\.?[0-9]*)(px|%)$/);\n  if (matches) {\n    let value = matches[1];\n    // The unit for % is percent.\n    let unit = matches[2] == '%' ? 'percent' : matches[2];\n    return new CSSUnitValue(value, unit);\n  }\n  return null;\n}\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { parseLength } from \"./utils\";\n\nconst AUTO = new CSSKeywordValue(\"auto\");\n\nlet scrollTimelineOptions = new WeakMap();\nlet extensionScrollOffsetFunctions = [];\n\nfunction scrollEventSource(scrollSource) {\n  if (scrollSource === document.scrollingElement) return document;\n  return scrollSource;\n}\n\n/**\n * Updates the currentTime for all Web Animation instanced attached to a ScrollTimeline instance\n * @param scrollTimelineInstance {ScrollTimeline}\n */\nfunction updateInternal(scrollTimelineInstance) {\n  let animations = scrollTimelineOptions.get(scrollTimelineInstance).animations;\n  if (animations.length === 0) return;\n  let timelineCurrentTime = scrollTimelineInstance.currentTime;\n\n  for (let i = 0; i < animations.length; i++) {\n    const animation = animations[i];\n    // The web-animations spec says to throw a TypeError if you try to seek to\n    // an unresolved time value from a resolved time value, so to polyfill the\n    // expected behavior we cancel the underlying animation.\n    if (timelineCurrentTime == null) {\n      if (animation.playState === \"paused\") animation.cancel();\n    } else if (animation.playState == 'running') {\n      animation.currentTime =\n          (timelineCurrentTime - animation.startTime) * animation.playbackRate;\n    }\n  }\n}\n\n/**\n * Calculates the number of milliseconds mapped to the scroll range in case of AUTO\n *  in case developer provided timeRange, we use that directly.\n * @param scrollTimeline {ScrollTimeline}\n * @returns {Number}\n */\nfunction calculateTimeRange(scrollTimeline) {\n  let timeRange = scrollTimeline.timeRange;\n  if (timeRange == AUTO) {\n    timeRange = 0;\n    let animations = scrollTimelineOptions.get(scrollTimeline).animations;\n    for (let i = 0; i < animations.length; i++) {\n      timeRange = Math.max(timeRange, calculateTargetEffectEnd(animations[i]));\n    }\n    if (timeRange === Infinity) timeRange = 0;\n  }\n  return timeRange;\n}\n\n/**\n * Determines target effect end based on animation duration, iterations count and start and end delays\n *  returned value should always be positive\n * @param options {Animation} animation\n * @returns {number}\n */\nexport function calculateTargetEffectEnd(animation) {\n  return animation.effect.getComputedTiming().activeDuration;\n}\n\n/**\n * Enables the usage of custom parser and evaluator function, utilized by intersection based offset.\n * @param parseFunction {Function}\n * @param evaluateFunction {Function}\n * @returns {Array} all currently installed parsers\n */\nexport function installScrollOffsetExtension(parseFunction, evaluateFunction) {\n  extensionScrollOffsetFunctions.push({\n    parse: parseFunction,\n    evaluate: evaluateFunction,\n  });\n  return extensionScrollOffsetFunctions;\n}\n\n/**\n * Calculates scroll offset based on orientation and scrollSource geometry\n * @param scrollSource {DOMElement}\n * @param orientation {String}\n * @returns {number}\n */\nexport function calculateMaxScrollOffset(scrollSource, orientation) {\n  // TODO: Support other writing directions.\n  if (orientation === \"block\") orientation = \"vertical\";\n  else if (orientation === \"inline\") orientation = \"horizontal\";\n  if (orientation === \"vertical\")\n    return scrollSource.scrollHeight - scrollSource.clientHeight;\n  else if (orientation === \"horizontal\")\n    return scrollSource.scrollWidth - scrollSource.clientWidth;\n}\n\nfunction resolvePx(cssValue, resolvedLength) {\n  if (cssValue instanceof CSSUnitValue) {\n    if (cssValue.unit == \"percent\")\n      return cssValue.value * resolvedLength / 100;\n    else if (cssValue.unit == \"px\")\n      return cssValue.value;\n    else\n      throw TypeError(\"Unhandled unit type \" + cssValue.unit);\n  } else if (cssValue instanceof CSSMathSum) {\n    let total = 0;\n    for (let value of cssValue.values) {\n      total += resolvePx(value, resolvedLength);\n    }\n    return total;\n  }\n  throw TypeError(\"Unsupported value type: \" + typeof(cssValue));\n}\n\nexport function calculateScrollOffset(\n  autoValue,\n  scrollSource,\n  orientation,\n  offset,\n  fn\n) {\n  if (fn)\n    return fn(\n      scrollSource,\n      orientation,\n      offset,\n      autoValue.value == 0 ? \"start\" : \"end\"\n    );\n  // TODO: Support other writing directions.\n  if (orientation === \"block\") orientation = \"vertical\";\n  else if (orientation === \"inline\") orientation = \"horizontal\";\n\n  let maxValue =\n    orientation === \"vertical\"\n      ? scrollSource.scrollHeight - scrollSource.clientHeight\n      : scrollSource.scrollWidth - scrollSource.clientWidth;\n  let parsed = parseLength(offset === AUTO ? autoValue : offset);\n  return resolvePx(parsed, maxValue);\n}\n\n/**\n * Removes a Web Animation instance from ScrollTimeline\n * @param scrollTimeline {ScrollTimeline}\n * @param animation {Animation}\n * @param options {Object}\n */\nexport function removeAnimation(scrollTimeline, animation) {\n  let animations = scrollTimelineOptions.get(scrollTimeline).animations;\n  let index = animations.indexOf(animation);\n  if (index === -1) return;\n  animations.splice(index, 1);\n}\n\nfunction find(scrollTimeline, animation) {\n  const animations = scrollTimelineOptions.get(scrollTimeline).animations;\n  let index = animations.indexOf(animation);\n  return (index === -1) ? null : animations[index];\n}\n\n/**\n * Attaches a Web Animation instance to ScrollTimeline.\n * @param scrollTimeline {ScrollTimeline}\n * @param animation {Animation}\n * @param options {Object}\n */\nexport function addAnimation(scrollTimeline, animation, options) {\n  if (!find(scrollTimeline, animation)) {\n    let animations = scrollTimelineOptions.get(scrollTimeline).animations;\n    animations.push(animation);\n  }\n  updateInternal(scrollTimeline);\n}\n\n// TODO: this is a private function used for unit testing add function\nexport function _getStlOptions(scrollTimeline) {\n  return scrollTimelineOptions.get(scrollTimeline);\n}\n\nexport class ScrollTimeline {\n  constructor(options) {\n    scrollTimelineOptions.set(this, {\n      scrollSource: null,\n      orientation: \"block\",\n      startScrollOffset: AUTO,\n      endScrollOffset: AUTO,\n      scrollOffsets: [],\n      timeRange: AUTO,\n\n      // Internal members\n      animations: [],\n      scrollOffsetFns: [],\n    });\n    this.scrollSource =\n      options && options.scrollSource !== undefined ? options.scrollSource : document.scrollingElement;\n    this.orientation = (options && options.orientation) || \"block\";\n    this.startScrollOffset = (options && options.startScrollOffset) || AUTO;\n    this.endScrollOffset = (options && options.endScrollOffset) || AUTO;\n    this.scrollOffsets = options && options.scrollOffsets !== undefined ? options.scrollOffsets : [];\n    this.timeRange = options && options.timeRange !== undefined ? options.timeRange : \"auto\";\n  }\n\n  set scrollSource(element) {\n    if (this.scrollSource)\n      scrollEventSource(this.scrollSource).removeEventListener(\"scroll\", () =>\n        updateInternal(this)\n      );\n    scrollTimelineOptions.get(this).scrollSource = element;\n    if (element) {\n      scrollEventSource(element).addEventListener(\"scroll\", () =>\n        updateInternal(this)\n      );\n    }\n    updateInternal(this);\n  }\n\n  get scrollSource() {\n    return scrollTimelineOptions.get(this).scrollSource;\n  }\n\n  set orientation(orientation) {\n    if (\n      [\"block\", \"inline\", \"horizontal\", \"vertical\"].indexOf(orientation) === -1\n    ) {\n      throw TypeError(\"Invalid orientation\");\n    }\n    scrollTimelineOptions.get(this).orientation = orientation;\n    updateInternal(this);\n  }\n\n  get orientation() {\n    return scrollTimelineOptions.get(this).orientation;\n  }\n\n  set scrollOffsets(value) {\n    let offsets = [];\n    let fns = [];\n    for (let input of value) {\n      let fn = null;\n      let offset = undefined;\n      if (input == \"auto\")\n        input = AUTO;\n      for (let i = 0; i < extensionScrollOffsetFunctions.length; i++) {\n        let result = extensionScrollOffsetFunctions[i].parse(input);\n        if (result !== undefined) {\n          offset = result;\n          fn = extensionScrollOffsetFunctions[i].evaluate;\n          break;\n        }\n      }\n      if (!fn) {\n        if (input != AUTO) {\n          let parsed = parseLength(input);\n          // TODO: This should check CSSMathSum values as well.\n          if (!parsed || (parsed instanceof CSSUnitValue && parsed.unit == \"number\"))\n            throw TypeError(\"Invalid scrollOffsets entry.\");\n        }\n        offset = input;\n      }\n      offsets.push(offset);\n      fns.push(fn);\n    }\n    if (offsets.length == 1 && offsets[0] == AUTO)\n      throw TypeError(\"Invalid scrollOffsets value.\");\n    let data = scrollTimelineOptions.get(this);\n    data.scrollOffsets = offsets;\n    data.scrollOffsetFns = fns;\n  }\n\n  get scrollOffsets() {\n    let data = scrollTimelineOptions.get(this);\n    return data.scrollOffsets;\n  }\n\n  set startScrollOffset(offset) {\n    if (offset == \"auto\")\n      offset = AUTO;\n    let currentStlOptions = scrollTimelineOptions.get(this);\n    // Allow extensions to override scroll offset calculation.\n    currentStlOptions.startScrollOffsetFunction = null;\n    for (let i = 0; i < extensionScrollOffsetFunctions.length; i++) {\n      let result = extensionScrollOffsetFunctions[i].parse(offset);\n      if (result !== undefined) {\n        offset = result;\n        currentStlOptions.startScrollOffsetFunction =\n          extensionScrollOffsetFunctions[i].evaluate;\n        break;\n      }\n    }\n    if (offset != AUTO && !scrollTimelineOptions.get(this).startScrollOffsetFunction) {\n      let parsed = parseLength(offset);\n      // TODO: This should check CSSMathSum values as well.\n      if (!parsed || (parsed instanceof CSSUnitValue && parsed.unit == \"number\"))\n        throw TypeError(\"Invalid start offset.\");\n    }\n    currentStlOptions.startScrollOffset = offset;\n    updateInternal(this);\n  }\n\n  get startScrollOffset() {\n    return scrollTimelineOptions.get(this).startScrollOffset;\n  }\n\n  set endScrollOffset(offset) {\n    if (offset == \"auto\")\n      offset = AUTO;\n    // Allow extensions to override scroll offset calculation.\n    scrollTimelineOptions.get(this).endScrollOffsetFunction = null;\n    for (let i = 0; i < extensionScrollOffsetFunctions.length; i++) {\n      let result = extensionScrollOffsetFunctions[i].parse(offset);\n      if (result !== undefined) {\n        offset = result;\n        scrollTimelineOptions.get(this).endScrollOffsetFunction =\n          extensionScrollOffsetFunctions[i].evaluate;\n        break;\n      }\n    }\n    if (offset != AUTO && !scrollTimelineOptions.get(this).startScrollOffsetFunction) {\n      let parsed = parseLength(offset);\n      // TODO: This should check CSSMathSum values as well.\n      if (!parsed || (parsed instanceof CSSUnitValue && parsed.unit == \"number\"))\n        throw TypeError(\"Invalid end offset.\");\n    }\n    scrollTimelineOptions.get(this).endScrollOffset = offset;\n    updateInternal(this);\n  }\n\n  get endScrollOffset() {\n    return scrollTimelineOptions.get(this).endScrollOffset;\n  }\n\n  set timeRange(range) {\n    if (range != \"auto\") {\n      // Check for a valid number, which if finite and not NaN.\n      if (typeof(range) != \"number\" || !Number.isFinite(range) || range != range)\n        throw TypeError(\"Invalid timeRange value\");\n    }\n    scrollTimelineOptions.get(this).timeRange = range;\n    updateInternal(this);\n  }\n\n  get timeRange() {\n    return scrollTimelineOptions.get(this).timeRange;\n  }\n\n  get phase() {\n    // Per https://drafts.csswg.org/scroll-animations-1/#phase-algorithm\n    // Step 1\n    let unresolved = null;\n    //   if source is null\n    if (!this.scrollSource) return \"inactive\";\n    let scrollerStyle = getComputedStyle(this.scrollSource);\n    //   if source does not currently have a CSS layout box\n    if (scrollerStyle.display == \"none\")\n      return \"inactive\";\n    //   if source's layout box is not a scroll container\"\n    if (scrollerStyle.overflow == \"visible\" || scrollerStyle.overflow == \"clip\")\n      return \"inactive\";\n    let startOffset = calculateScrollOffset(\n      new CSSUnitValue(0, 'percent'),\n      this.scrollSource,\n      this.orientation,\n      this.startScrollOffset,\n      scrollTimelineOptions.get(this).startScrollOffsetFunction\n    );\n    let endOffset = calculateScrollOffset(\n      new CSSUnitValue(100, 'percent'),\n      this.scrollSource,\n      this.orientation,\n      this.endScrollOffset,\n      scrollTimelineOptions.get(this).endScrollOffsetFunction\n    );\n    let maxOffset = calculateScrollOffset(\n      new CSSUnitValue(100, 'percent'),\n      this.scrollSource,\n      this.orientation,\n      new CSSUnitValue(100, 'percent'),\n      null\n    );\n    //   if source's effective scroll range is null\n    if (startOffset === null || endOffset === null)\n      return \"inactive\";\n\n    // Step 2\n    // TODO: Support other writing directions.\n    let currentScrollOffset = this.scrollSource.scrollTop\n    if (this.orientation === 'inline' || this.orientation === 'horizontal') {\n      currentScrollOffset = this.scrollSource.scrollLeft\n    }\n\n    // Step 3\n    if (currentScrollOffset < startOffset)\n      return \"before\";\n    if (currentScrollOffset >= endOffset && endOffset < maxOffset)\n      return \"after\";\n    return \"active\"\n  }\n\n  get currentTime() {\n    // Per https://wicg.github.io/scroll-animations/#current-time-algorithm\n    // Step 1\n    let unresolved = null;\n    if (!this.scrollSource) return unresolved;\n    let startOffset = calculateScrollOffset(\n      new CSSUnitValue(0, 'percent'),\n      this.scrollSource,\n      this.orientation,\n      this.startScrollOffset,\n      scrollTimelineOptions.get(this).startScrollOffsetFunction\n    );\n    let endOffset = calculateScrollOffset(\n      new CSSUnitValue(100, 'percent'),\n      this.scrollSource,\n      this.orientation,\n      this.endScrollOffset,\n      scrollTimelineOptions.get(this).endScrollOffsetFunction\n    );\n    let timeRange = calculateTimeRange(this);\n\n    // Step 2\n    // TODO: Support other writing directions.\n    let currentScrollOffset = this.scrollSource.scrollTop\n    if (this.orientation === 'inline' || this.orientation === 'horizontal') {\n      currentScrollOffset = this.scrollSource.scrollLeft\n    }\n\n    // Step 3\n    if (currentScrollOffset < startOffset)\n      return 0;\n\n    // Step 4\n    if (currentScrollOffset >= endOffset)\n      return timeRange;\n\n    // Step 5\n    return (\n      ((currentScrollOffset - startOffset) / (endOffset - startOffset)) *\n      timeRange\n    );\n  }\n\n  get __polyfill() {\n    return true;\n  }\n}\n","import {\n  ScrollTimeline,\n  installScrollOffsetExtension,\n  addAnimation,\n  removeAnimation\n} from \"./scroll-timeline-base\";\n\nconst nativeElementAnimate = window.Element.prototype.animate;\nconst nativeAnimation = window.Animation;\n\n/**\n * Decides whether to use native Element.prototype.animate function in regular fashion or pass it to our polyfill\n *  so its current time is driven by scroll event\n * @param keyframes {Object} array of keyframe objects\n * @param options {Object} WAAPI options object\n * @returns {Function}\n */\n\nfunction createReadyPromise(details) {\n  let sequence = ++details.sequence;\n  let promise = details.readyPromise = new Promise((resolve, reject) => {\n    // TODO: We should actually not apply the animation until this is\n    // resolved.\n    requestAnimationFrame(() => {\n      // If this promise was replaced, this animation was aborted.\n      if (details.readyPromise == promise)\n        details.readyPromise = null;\n      if (details.aborted.has(sequence)) {\n        details.aborted.delete(sequence);\n        // Reject with a non-visible AbortError.\n        reject(new DOMException(\"Animation aborted\", \"AbortError\"));\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\n// Create an alternate Animation class which proxies API requests.\n// TODO: Create a full-fledged proxy so missing methods are automatically\n// fetched from Animation.\nlet proxyAnimations = new WeakMap();\n\n// Hack for testing\nwindow.proxyAnimations = proxyAnimations;\n\nexport class ProxyAnimation {\n  constructor(effect, timeline) {\n    const animation =\n        (effect instanceof nativeAnimation) ?\n           effect : new nativeAnimation(effect, animationTimeline);\n    const isScrollAnimation = timeline instanceof ScrollTimeline;\n    const animationTimeline = isScrollAnimation ? undefined : timeline;\n    proxyAnimations.set(this, {\n      animation: animation,\n      timeline: isScrollAnimation ? timeline : undefined,\n      playState: isScrollAnimation ? \"idle\" : null,\n      readyPromise: null,\n      // Start and hold times are directly tracked in the proxy despite being\n      // accessible via the animation so that direct manipulation of these\n      // properties does not affect the play state of the underlying animation.\n      // Note that any changes to these values require an update of current\n      // time for the underlying animation to ensure that its hold time is set\n      // to the correct position.\n      startTime: null,\n      holdTime: null,\n      // When changing the timeline on a paused animation, we defer updating the\n      // start time until the animation resumes playing.\n      resetCurrentTimeOnResume: false,\n      // Calls to reverse and updatePlaybackRate set a pending rate that\n      // does not immediately take effect. The value of this property is\n      // inaccessible via the web animations API.\n      pendingPlaybackRate: null,\n      sequence: 0, /* Used to track ready promises. */\n      aborted: new Set(), /* Aborted sequences. */\n    });\n  }\n\n  getProperty(name) {\n    const proxy = proxyAnimations.get(this);\n    if (proxy.timeline && (name in proxy))\n      return proxy[name];\n    else\n      return proxy.animation[name];\n  }\n\n  setProperty(name, value) {\n    const proxy = proxyAnimations.get(this);\n    if (proxy.timeline && (name in proxy))\n      proxy[name] = value;\n    else\n      proxy.animation[name] = value;\n  }\n\n  useProxy() {\n    return !!proxyAnimations.get(this).timeline;\n  }\n\n  effectivePlaybackRate() {\n    const proxy = proxyAnimations.get(this);\n    if (proxy.pendingPlaybackRate)\n      return proxy.pendingPlaybackRate;\n    return this.playbackRate;\n  }\n\n  commitPendingPlaybackRate() {\n    const proxy = proxyAnimations.get(this);\n    if (proxy.pendingPlaybackRate) {\n      this.playbackRate = proxy.pendingPlaybackRate;\n      proxy.pendingPlaybackRate = null;\n    }\n  }\n\n  get effect() {\n    return this.getProperty('effect');\n  }\n  set effect(newEffect) {\n    this.setProperty('effect', newEffect);\n  }\n\n  get timeline() {\n    return this.getProperty('timeline');\n  }\n  set timeline(newTimeline) {\n    const oldTimeline = this.timeline;\n    if (oldTimeline == newTimeline)\n      return;\n\n    const fromScrollTimeline = (oldTimeline instanceof ScrollTimeline);\n    const toScrollTimeline = (newTimeline instanceof ScrollTimeline);\n    const previousCurrentTime = this.currentTime;\n    const previousPlayState = this.playState;\n    const playbackRate = this.effectivePlaybackRate();\n    const pending = this.pending;\n    const proxy = proxyAnimations.get(this);\n\n    if (fromScrollTimeline) {\n      removeAnimation(proxy.timeline, proxy.animation);\n    }\n\n    proxy.resetCurrentTimeOnResume = false;\n    if (toScrollTimeline) {\n      // Cannot assume that the underlying native implementation supports\n      // mutable timelines. Thus, we leave its timeline untouched, and simply\n      // ensure that it is in the paused state.\n      proxy.timeline = newTimeline;\n      // if (!fromScrollTimeline) {\n        this.commitPendingPlaybackRate();\n        proxy.animation.pause();\n        switch(previousPlayState) {\n          case 'idle':\n            proxy.playState = 'idle';\n            proxy.holdTime = null;\n            proxy.startTime = null;\n            break;\n\n          case 'paused':\n            proxy.playState = 'paused';\n            proxy.resetCurrentTimeOnResume = true;\n            this.currentTime = previousCurrentTime;\n            break;\n\n          case 'running':\n          case 'finished':\n            proxy.playState = 'running';\n            this.startTime =\n                playbackRate < 0 ? proxy.animation.effect.getTiming().duration\n                                 : 0;\n            break;\n        }\n        addAnimation(proxy.timeline, this);\n        if (pending)\n          createReadyPromise(proxy);\n      // }\n    } else {\n      // TODO: polyfill mutable timeline support. Cannot assume the native\n      // animation supports mutable timelines.\n      proxy.animation.timeline = newTimeline;\n      if (fromScrollTimeline) {\n        // Sync play state and current time.\n        // TODO: sync pending status (ready promise).\n        proxyAnimations.get(this).currentTime = previousCurrentTime;\n        // switch(proxyAnimations.get(this).playState) {\n        //   case 'idle':\n        //     proxyAnimations.get(this).animation.cancel();\n        //     break;\n\n        //   case 'paused':\n        //     proxyAnimations.get(this).animation.pause();\n        //     break;\n\n        //   case 'running':\n        //   case 'finished':\n        //     proxyAnimations.get(this).animation.play();\n        //     break;\n        // }\n      }\n    }\n    // <----\n  }\n\n  get startTime() {\n    return this.getProperty('startTime');\n  }\n  set startTime(value) {\n    this.setProperty('startTime', value);\n    const proxy = proxyAnimations.get(this);\n    proxy.resetCurrentTimeOnResume = false;\n    if (this.useProxy()) {\n      proxy.playState = 'running';\n    }\n  }\n\n  get currentTime() {\n    return this.getProperty('currentTime');\n  }\n  set currentTime(value) {\n    this.setProperty('currentTime', value);\n    const proxy = proxyAnimations.get(this);\n    // proxy.resetCurrentTimeOnResume = false;\n    if (this.useProxy()) {\n       // Update the start or the hold time of the proxy animation depending\n       // on the play sate.\n       const timelineTime = proxy.timeline.currentTime;\n       const playbackRate = this.playbackRate;\n       switch(proxy.playState) {\n         case 'paused':\n           proxy.holdTime = value;\n           proxy.startTime = null;\n           break;\n\n        case 'running':\n        case 'finished':\n          // TODO: handle value == null or playbackRate == 0.\n          proxy.startTime = timelineTime - value / playbackRate;\n          proxy.holdTime = null;\n          break;\n\n        default:\n          // TODO: implement me.\n       }\n    }\n  }\n\n  get playbackRate() {\n    return this.getProperty('playbackRate');\n  }\n  set playbackRate(value) {\n    this.setProperty('playbackRate', value);\n  }\n\n  get playState() {\n    return this.getProperty('playState');\n  }\n\n  get replaceState() {\n    return proxyAnimations.get(this).animation.pending;\n  }\n\n  get pending() {\n    const details = proxyAnimations.get(this);\n    if (details.readyPromise)\n      return true;\n    return proxyAnimations.get(this).animation.pending;\n  }\n\n  finish() {\n    let details = proxyAnimations.get(this);\n    details.animation.finish();\n    let internalTimeline = details.timeline;\n    if (!internalTimeline) {\n      details.animation.play();\n      return;\n    }\n    if (details.playState == \"finished\")\n      return;\n    details.playState = \"finished\";\n    details.readyPromise = null;\n    removeAnimation(internalTimeline, details.animation);\n  }\n\n  play() {\n    let proxy = proxyAnimations.get(this);\n    if (!this.useProxy()) {\n      proxy.animation.play();\n      return;\n    }\n\n    let previousCurrentTime = this.currentTime;\n    proxy.animation.pause();\n    if (!previousCurrentTime || proxy.resetCurrentTimeOnResume) {\n      this.startTime =\n          this.effectivePlaybackRate() < 0 ?\n              proxy.animation.effect.getTiming().duration : 0;\n      proxy.resetCurrentTimeOnResume = false;\n    }\n\n    proxy.playState = \"running\";\n    addAnimation(proxy.timeline, this);\n\n    if (!proxy.readyPromise)\n      createReadyPromise(proxy);\n  }\n\n  pause() {\n    let details = proxyAnimations.get(this);\n    if (!details.timeline) {\n      proxyAnimations.get(this).animation.pause();\n      return;\n    }\n    if (proxyAnimations.get(this).playState == \"paused\")\n      return;\n    proxyAnimations.get(this).playState = \"paused\";\n    removeAnimation(details.timeline, details.animation);\n    createReadyPromise(details);\n  }\n\n  reverse() {\n    const proxy = proxyAnimations.get(this);\n    const playbackRate = this.effectivePlaybackRate();\n    proxy.animation.reverse();\n    proxy.pendingPlaybackRate = -playbackRate;\n  }\n\n  updatePlaybackRate(rate) {\n    const proxy = proxyAnimations.get(this);\n    proxy.animation.updatePlaybackRate(rate);\n    proxy.pendingPlaybackRate = rate;\n  }\n\n  persist() {\n    proxyAnimations.get(this).animation.persist();\n  }\n\n  get id() {\n    return proxyAnimations.get(this).animation.id;\n  }\n\n  cancel() {\n    let details = proxyAnimations.get(this);\n    details.animation.cancel();\n    let internalTimeline = details.timeline;\n    if (!internalTimeline)\n      return;\n    if (details.playState == \"idle\" ||\n        details.playState == \"finished\")\n      return;\n    if (details.playState == \"running\")\n      removeAnimation(internalTimeline, details.animation);\n    details.playState = \"finished\";\n    if (details.readyPromise) {\n      details.aborted.add(details.sequence);\n      details.readyPromise = null;\n    }\n  }\n\n  get onfinish() {\n    return proxyAnimations.get(this).animation.onfinish;\n  }\n  set onfinish(value) {\n    proxyAnimations.get(this).animation.onfinish = value;\n  }\n  get oncancel() {\n    return proxyAnimations.get(this).animation.oncancel;\n  }\n  set oncancel(value) {\n    proxyAnimations.get(this).animation.oncancel = value;\n  }\n  get onremove() {\n    return proxyAnimations.get(this).animation.onremove;\n  }\n  set onremove(value) {\n    proxyAnimations.get(this).animation.onremove = value;\n  }\n\n  get finished() {\n    proxyAnimations.get(this).animation.finished;\n  }\n\n  get ready() {\n    const proxy = proxyAnimations.get(this);\n    if (this.useProxy()) {\n      if (proxy.readyPromise)\n        return proxy.readyPromise;\n    }\n    return proxy.animation.ready;\n  }\n\n};\n\nexport function animate(keyframes, options) {\n  let timeline = options.timeline;\n  if (!timeline || !(timeline instanceof ScrollTimeline)) {\n    let animation = nativeElementAnimate.apply(this, [keyframes, options]);\n    // Even through this animation runs as a native animation, we still wrap\n    // it in a proxy animation to handle changing the animation's timeline.\n    let proxyAnimation = new ProxyAnimation(animation, timeline);\n    return proxyAnimation;\n  }\n  delete options.timeline;\n  let animation = nativeElementAnimate.apply(this, [keyframes, options]);\n  animation.pause();\n  let proxyAnimation = new ProxyAnimation(animation, timeline);\n  proxyAnimation.play();\n  return proxyAnimation;\n};\n\n\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { parseLength } from \"./utils\";\n\nlet IntersectionOptions = new WeakMap();\n\n// Margin is stored as a 4 element array [top, right, bottom, left] but can be\n// specified using anywhere from 1 - 4 elements. This map defines how to convert\n// various length inputs to their components.\nconst TOP = 0;\nconst RIGHT = 1;\nconst BOTTOM = 2;\nconst LEFT = 3;\nconst MARGIN_MAP = [\n  // 1 length maps to all positions.\n  [[TOP, RIGHT, BOTTOM, LEFT]],\n  // 2 lengths maps to vertical and horizontal margins.\n  [\n    [TOP, BOTTOM],\n    [RIGHT, LEFT],\n  ],\n  // 3 lengths maps to top, horizontal, bottom margins.\n  [[TOP], [RIGHT, LEFT], [BOTTOM]],\n  // 4 lengths maps to each component.\n  [[TOP], [RIGHT], [BOTTOM], [LEFT]],\n];\n\nclass IntersectionBasedOffset {\n  constructor(value) {\n    IntersectionOptions.set(this, {\n      target: null,\n      edge: \"start\",\n      threshold: 0,\n      rootMargin: [\n        [0, \"px\"],\n        [0, \"px\"],\n        [0, \"px\"],\n        [0, \"px\"],\n      ],\n    });\n    this.target = value.target;\n    this.edge = value.edge || \"start\";\n    this.threshold = value.threshold || 0;\n    this.rootMargin = value.rootMargin || \"0px 0px 0px 0px\";\n    this.clamp = value.clamp || false;\n  }\n\n  set target(element) {\n    if (!(element instanceof Element)) {\n      IntersectionOptions.get(this).target = null;\n      throw Error(\"Intersection target must be an element.\");\n    }\n    IntersectionOptions.get(this).target = element;\n  }\n\n  get target() {\n    return IntersectionOptions.get(this).target;\n  }\n\n  set edge(value) {\n    if ([\"start\", \"end\"].indexOf(value) == -1) return;\n    IntersectionOptions.get(this).edge = value;\n  }\n\n  get edge() {\n    return IntersectionOptions.get(this).edge;\n  }\n\n  set threshold(value) {\n    let threshold = parseFloat(value);\n    // Throw a TypeError for a parse error.\n    if (threshold != threshold)\n      throw TypeError(\"Invalid threshold.\");\n    // TODO(https://crbug.com/1136516): This should throw a RangeError\n    // consistent with the intersection observer spec but the current\n    // test expectations are looking for a TypeError.\n    if (threshold < 0 || threshold > 1)\n      throw TypeError(\"threshold must be in the range [0, 1]\");\n    IntersectionOptions.get(this).threshold = threshold;\n  }\n\n  get threshold() {\n    return IntersectionOptions.get(this).threshold;\n  }\n\n  set rootMargin(value) {\n    let margins = value.split(/ +/);\n    if (margins.length < 1 || margins.length > 4)\n      throw TypeError(\n        \"rootMargin must contain between 1 and 4 length components\"\n      );\n    let parsedMargins = [[], [], [], []];\n    for (let i = 0; i < margins.length; i++) {\n      let parsedValue = parseLength(margins[i], true);\n      if (!parsedValue) throw TypeError(\"Unrecognized rootMargin length\");\n      let positions = MARGIN_MAP[margins.length - 1][i];\n      for (let j = 0; j < positions.length; j++) {\n        parsedMargins[positions[j]] = [\n          parseFloat(parsedValue.value),\n          parsedValue.unit,\n        ];\n      }\n    }\n    IntersectionOptions.get(this).rootMargin = parsedMargins;\n  }\n\n  get rootMargin() {\n    // TODO: Simplify to the shortest matching specification for the given margins.\n    return IntersectionOptions.get(this)\n      .rootMargin.map((margin) => {\n        return margin.join(\"\");\n      })\n      .join(\" \");\n  }\n\n  set clamp(value) {\n    // This is just for testing alternative proposals - not intended to be part\n    // of the specification.\n    IntersectionOptions.get(this).clamp = !!value;\n  }\n}\n\nexport function parseOffset(value) {\n  if (value.target) return new IntersectionBasedOffset(value);\n}\n\nfunction resolveLength(length, containerSize) {\n  if (length[1] == \"percent\") return (length[0] * containerSize) / 100;\n  // Assumption is only px or % will be passed in.\n  // TODO: Support other length types (e.g. em, vh, etc).\n  return length[0];\n}\n\nexport function calculateOffset(scrollSource, orientation, offset, startOrEnd) {\n  // TODO: Support other writing directions.\n  if (orientation == \"block\") orientation = \"vertical\";\n  else if (orientation == \"inline\") orientation = \"horizontal\";\n  let originalViewport =\n    scrollSource == document.scrollingElement\n      ? {\n          left: 0,\n          right: scrollSource.clientWidth,\n          top: 0,\n          bottom: scrollSource.clientHeight,\n          width: scrollSource.clientWidth,\n          height: scrollSource.clientHeight,\n        }\n      : scrollSource.getBoundingClientRect();\n\n  // Resolve margins and offset viewport.\n  let parsedMargins = IntersectionOptions.get(offset).rootMargin;\n  let computedMargins = [];\n  for (let i = 0; i < 4; i++) {\n    computedMargins.push(\n      resolveLength(\n        parsedMargins[i],\n        i % 2 == 0 ? originalViewport.height : originalViewport.width\n      )\n    );\n  }\n  let viewport = {\n    left: originalViewport.left - computedMargins[LEFT],\n    right: originalViewport.right + computedMargins[RIGHT],\n    width:\n      originalViewport.right -\n      originalViewport.left +\n      computedMargins[LEFT] +\n      computedMargins[RIGHT],\n    top: originalViewport.top - computedMargins[TOP],\n    bottom: originalViewport.bottom + computedMargins[BOTTOM],\n    height:\n      originalViewport.bottom -\n      originalViewport.top +\n      computedMargins[TOP] +\n      computedMargins[BOTTOM],\n  };\n\n  let clamped = IntersectionOptions.get(offset).clamp;\n  let target = offset.target.getBoundingClientRect();\n  let threshold = offset.threshold;\n  // Invert threshold for start position.\n  if (offset.edge == \"start\") threshold = 1 - threshold;\n  // Projected point into the scroller scroll range.\n  if (orientation == \"vertical\") {\n    let point =\n      target.top +\n      target.height * threshold -\n      viewport.top +\n      scrollSource.scrollTop;\n    if (clamped) {\n      if (offset.edge == \"end\") return Math.max(0, point - viewport.height);\n      return Math.min(point, scrollSource.scrollHeight - viewport.height);\n    } else {\n      if (offset.edge == \"end\") return point - viewport.height;\n      return point;\n    }\n  } else {\n    // orientation == 'horizontal'\n    let point =\n      target.left +\n      target.width * threshold -\n      viewport.left +\n      scrollSource.scrollLeft;\n    if (clamped) {\n      if (offset.edge == \"end\") return Math.max(0, point - viewport.width);\n      return Math.min(point, scrollSource.scrollWidth - viewport.width);\n    } else {\n      if (offset.edge == \"end\") return point - viewport.width;\n      return point;\n    }\n  }\n}\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  ScrollTimeline,\n  installScrollOffsetExtension\n} from \"./scroll-timeline-base\";\nimport {\n  animate,\n  ProxyAnimation\n} from \"./proxy-animation.js\";\nimport { calculateOffset, parseOffset } from \"./intersection-based-offset\";\n\ninstallScrollOffsetExtension(parseOffset, calculateOffset);\n\nif (\n  !Reflect.defineProperty(window, \"ScrollTimeline\", { value: ScrollTimeline })\n) {\n  throw Error(\n    \"Error installing ScrollTimeline polyfill: could not attach ScrollTimeline to window\"\n  );\n}\n\nif (!Reflect.defineProperty(Element.prototype, \"animate\", { value: animate })) {\n  throw Error(\n    \"Error installing ScrollTimeline polyfill: could not attach WAAPI's animate to DOM Element\"\n  );\n}\nif (!Reflect.defineProperty(window, \"Animation\", {value: ProxyAnimation})) {\n  throw Error(\"Error installing Animation constructor.\");\n}\n"],"names":["parseLength","obj","acceptStr","CSSUnitValue","CSSMathSum","matches","trim","match","AUTO","CSSKeywordValue","scrollTimelineOptions","WeakMap","extensionScrollOffsetFunctions","scrollEventSource","scrollSource","document","scrollingElement","updateInternal","scrollTimelineInstance","animations","get","length","timelineCurrentTime","currentTime","i","animation","playState","cancel","startTime","playbackRate","calculateScrollOffset","autoValue","orientation","offset","fn","value","maxValue","scrollHeight","clientHeight","scrollWidth","clientWidth","resolvePx","cssValue","resolvedLength","unit","TypeError","total","values","removeAnimation","scrollTimeline","index","indexOf","splice","addAnimation","options","find","push","ScrollTimeline","set","this","startScrollOffset","endScrollOffset","scrollOffsets","timeRange","scrollOffsetFns","undefined","_createClass","element","removeEventListener","_this","addEventListener","offsets","fns","input","result","parse","evaluate","parsed","data","currentStlOptions","startScrollOffsetFunction","endScrollOffsetFunction","range","Number","isFinite","scrollerStyle","getComputedStyle","display","overflow","startOffset","endOffset","maxOffset","currentScrollOffset","scrollTop","scrollLeft","Math","max","effect","getComputedTiming","activeDuration","Infinity","calculateTimeRange","nativeElementAnimate","window","Element","prototype","animate","nativeAnimation","Animation","createReadyPromise","details","sequence","promise","readyPromise","Promise","resolve","reject","requestAnimationFrame","aborted","has","DOMException","proxyAnimations","ProxyAnimation","timeline","animationTimeline","isScrollAnimation","holdTime","resetCurrentTimeOnResume","pendingPlaybackRate","Set","getProperty","name","proxy","setProperty","useProxy","effectivePlaybackRate","commitPendingPlaybackRate","finish","internalTimeline","play","previousCurrentTime","pause","getTiming","duration","reverse","updatePlaybackRate","rate","persist","add","newEffect","newTimeline","oldTimeline","fromScrollTimeline","toScrollTimeline","previousPlayState","pending","timelineTime","id","onfinish","oncancel","onremove","ready","IntersectionOptions","MARGIN_MAP","IntersectionBasedOffset","target","edge","threshold","rootMargin","clamp","Error","parseFloat","margins","split","parsedMargins","parsedValue","positions","j","map","margin","join","startOrEnd","originalViewport","left","right","top","bottom","width","height","getBoundingClientRect","computedMargins","viewport","clamped","point","min","Reflect","defineProperty","keyframes","apply","proxyAnimation"],"mappings":"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"}